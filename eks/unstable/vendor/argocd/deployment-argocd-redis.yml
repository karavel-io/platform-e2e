apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: redis
    app.kubernetes.io/managed-by: karavel
    app.kubernetes.io/name: argocd-redis
    app.kubernetes.io/part-of: argocd
    app.kubernetes.io/version: 6.0.9
    karavel.io/component-name: argocd
    karavel.io/component-version: 0.1.0-SNAPSHOT
  name: argocd-redis
  namespace: argocd
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: redis
      app.kubernetes.io/managed-by: karavel
      app.kubernetes.io/name: argocd-redis
      app.kubernetes.io/part-of: argocd
      karavel.io/component-name: argocd
  template:
    metadata:
      labels:
        app.kubernetes.io/component: redis
        app.kubernetes.io/managed-by: karavel
        app.kubernetes.io/name: argocd-redis
        app.kubernetes.io/part-of: argocd
        app.kubernetes.io/version: 6.0.9
        karavel.io/component-name: argocd
        karavel.io/component-version: 0.1.0-SNAPSHOT
    spec:
      automountServiceAccountToken: false
      containers:
      - args:
        - /opt/bitnami/scripts/redis/run.sh
        - --save
        - ""
        - --appendonly
        - "no"
        env:
        - name: ALLOW_EMPTY_PASSWORD
          value: "yes"
        image: quay.io/bitnami/redis:6.0.9
        imagePullPolicy: IfNotPresent
        name: argocd-redis
        ports:
        - containerPort: 6379
          name: redis
        resources:
          limits:
            cpu: 200m
            memory: 256Mi
          requests:
            cpu: 100m
            memory: 128Mi
      priorityClassName: system-cluster-critical
      securityContext:
        fsGroup: 1000
        runAsNonRoot: true
