apiVersion: vault.banzaicloud.com/v1alpha1
kind: Vault
metadata:
  name: vault
  namespace: vault
spec:
  affinity:
    podAntiAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
      - podAffinityTerm:
          labelSelector:
            matchExpressions:
            - key: app.kubernetes.io/name
              operator: In
              values:
              - vault
          topologyKey: kubernetes.io/hostname
        weight: 100
  bankVaultsImage: ghcr.io/banzaicloud/bank-vaults:1.14.3
  caNamespaces: []
  config:
    api_addr: https://vault.vault:8200
    cluster_addr: https://${.Env.POD_NAME}:8201
    listener:
      tcp:
        address: '[::]:8200'
        proxy_protocol_behavior: use_always
        telemetry:
          unauthenticated_metrics_access: true
        tls_cert_file: /vault/tls/server.crt
        tls_key_file: /vault/tls/server.key
    storage:
      raft:
        path: /vault/file
    telemetry:
      disable_hostname: true
      prometheus_retention_time: 24h
      statsd_address: localhost:9125
    ui: true
  existingTlsSecretName: vault-tls
  externalConfig:
    auth:
    - config:
        disable_iss_validation: true
      roles:
      - bound_service_account_names:
        - external-secrets-default-store
        bound_service_account_namespaces:
        - external-secrets
        name: karavel
        policies:
        - allow_secrets
        ttl: 1h
      type: kubernetes
    groups:
    - name: admin
      policies:
      - allow_all
      type: external
    policies:
    - name: allow_secrets
      rules: path "secret/*" { capabilities = ["create", "read", "update", "delete",
        "list"] }
    - name: allow_self
      rules: path "secret/*" { capabilities = ["create", "read", "update", "delete",
        "list"] }
    - name: allow_all
      rules: path "*" { capabilities = ["create", "read", "update", "delete", "list"]
        }
    secrets:
    - description: General secrets
      options:
        version: 2
      path: secret
      type: kv
  image: vault:1.8.1
  ingress:
    annotations:
      cert-manager.io/cluster-issuer: letsencrypt-prod
    spec:
      rules:
      - host: vault.do.e2e.karavel.io
        http:
          paths:
          - backend:
              service:
                name: vault
                port:
                  name: api-port
            path: /
            pathType: Prefix
      tls:
      - hosts:
        - vault.do.e2e.karavel.io
        secretName: vault-public-tls
  istioEnabled: false
  serviceAccount: vault
  serviceType: ClusterIP
  size: 3
  tlsExpiryThreshold: 168h
  unsealConfig:
    kubernetes:
      secretNamespace: vault
    options:
      preFlightChecks: true
  vaultEnvsConfig:
  - name: VAULT_LOG_LEVEL
    value: info
  vaultInitContainers:
  - command:
    - /bin/sh
    - -c
    - |
      chown -R 100:1000 /vault/file
    image: busybox
    name: raft-permission
    volumeMounts:
    - mountPath: /vault/file
      name: vault-raft
  vaultLabels:
    app.kubernetes.io/managed-by: karavel
    app.kubernetes.io/name: vault
    app.kubernetes.io/part-of: vault
    app.kubernetes.io/version: 1.8.1
    karavel.io/component-name: vault
    karavel.io/component-version: 0.1.0-SNAPSHOT
  volumeClaimTemplates:
  - metadata:
      name: vault-raft
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 50Gi
      volumeMode: Filesystem
  volumeMounts:
  - mountPath: /vault/file
    name: vault-raft
  - mountPath: /etc/cert-manager
    name: tls-cert
  volumes:
  - name: tls-cert
    secret:
      defaultMode: 420
      secretName: vault-tls
  watchedSecretsAnnotations:
  - cert-manager.io/certificate-name: vault-public-tls
  - cert-manager.io/certificate-name: vault-tls
