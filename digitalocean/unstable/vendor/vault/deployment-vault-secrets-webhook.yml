apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/managed-by: karavel
    app.kubernetes.io/name: vault-secrets-webhook
    app.kubernetes.io/part-of: vault
    app.kubernetes.io/version: 1.8.1
    karavel.io/component-name: vault
    karavel.io/component-version: 0.1.0-SNAPSHOT
  name: vault-secrets-webhook
  namespace: vault
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/managed-by: karavel
      app.kubernetes.io/name: vault-secrets-webhook
      app.kubernetes.io/part-of: vault
      karavel.io/component-name: vault
  template:
    metadata:
      labels:
        app.kubernetes.io/managed-by: karavel
        app.kubernetes.io/name: vault-secrets-webhook
        app.kubernetes.io/part-of: vault
        app.kubernetes.io/version: 1.8.1
        karavel.io/component-name: vault
        karavel.io/component-version: 0.1.0-SNAPSHOT
    spec:
      containers:
      - env:
        - name: TLS_CERT_FILE
          value: /var/serving-cert/tls.crt
        - name: TLS_PRIVATE_KEY_FILE
          value: /var/serving-cert/tls.key
        - name: LISTEN_ADDRESS
          value: :8443
        - name: VAULT_ENV_IMAGE
          value: ghcr.io/banzaicloud/vault-env:1.14.3
        - name: VAULT_IMAGE
          value: vault:1.8.1
        image: ghcr.io/banzaicloud/vault-secrets-webhook:1.14.3
        imagePullPolicy: IfNotPresent
        name: vault-secrets-webhook
        ports:
        - containerPort: 8443
          name: https
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /healthz
            port: 8443
            scheme: HTTPS
        securityContext:
          allowPrivilegeEscalation: false
          runAsUser: 65534
        volumeMounts:
        - mountPath: /var/serving-cert
          name: serving-cert
      serviceAccountName: vault-secrets-webhook
      volumes:
      - name: serving-cert
        secret:
          defaultMode: 420
          secretName: vault-secrets-webhook-tls
